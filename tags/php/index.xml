<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PHP on Percona Community</title><link>https://percona.community/tags/php/</link><description>Recent content in PHP on Percona Community</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© Percona Community. MySQL, InnoDB, MariaDB and MongoDB are trademarks of their respective owners.</copyright><lastBuildDate>Tue, 28 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://percona.community/tags/php/index.xml" rel="self" type="application/rss+xml"/><item><title>How To Optimize the Structure of a Simple PHP Application as Your Project Grows</title><link>https://percona.community/blog/2023/03/28/how-to-optimize-the-structure-of-a-simple-php-application-as-your-project-grows/</link><pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate><guid>https://percona.community/blog/2023/03/28/how-to-optimize-the-structure-of-a-simple-php-application-as-your-project-grows/</guid><description>Let&amp;rsquo;s discuss the structure of our simple PHP application, folders, files, and functions and transform the project to grow it.
You and I have developed a small PHP application that makes an HTTP request to the GitHub API and stores the result in the database.
Step 1 - How to Develop a Simple Web Application Using Docker-compose, Nginx, PHP 8, and MongoDB 6. Step 2 - How to Make HTTP Requests to API in PHP App Using GitHub API Example and Write to Percona Server for MongoDB.</description></item><item><title>How to Make HTTP Requests to API in PHP App Using GitHub API Example and Write to Percona Server for MongoDB</title><link>https://percona.community/blog/2023/03/20/how-to-make-http-requests-to-api-in-php-app-using-github-api-example-and-write-to-percona-server-for-mongodb/</link><pubDate>Mon, 20 Mar 2023 00:00:00 +0000</pubDate><guid>https://percona.community/blog/2023/03/20/how-to-make-http-requests-to-api-in-php-app-using-github-api-example-and-write-to-percona-server-for-mongodb/</guid><description>We learn how to work with HTTP requests in PHP and make API requests using the GitHub API as an example. We&amp;rsquo;ll get the data from the API and save it to the database.
In the previous article, we developed a simple application that connects to the MongoDB database (Percona Server for MongoDB) and writes documents in a loop. We only used Composer packages to work with MongoDB. We have set up the Docker-compose environment and have the app/ directory where the application code is located.</description></item><item><title>How to Develop a Simple Web Application Using Docker, Nginx, PHP, and Percona Server for MongoDB</title><link>https://percona.community/blog/2023/03/17/how-to-develop-a-simple-web-application-using-docker-nginx-php-and-percona-server-for-mongodb/</link><pubDate>Fri, 17 Mar 2023 00:00:00 +0000</pubDate><guid>https://percona.community/blog/2023/03/17/how-to-develop-a-simple-web-application-using-docker-nginx-php-and-percona-server-for-mongodb/</guid><description>I&amp;rsquo;m developing an application that takes data from different sources, processes it, and prepares reports. In this series of articles, I will explain how to install and configure the tools, application, and database to develop and run the application.
About the application and choice of tools The application I develop gets data from GitHub, Jira, and websites via API, processes it and creates reports according to the desired requirements.
The application is developed with PHP version 8+ and Nginx as a web server, and Percona Server for MongoDB as a database.</description></item></channel></rss>