<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>testing on Percona Community</title><link>https://percona.community/tags/testing/</link><description>Recent content in testing on Percona Community</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© Percona Community. MySQL, InnoDB, MariaDB and MongoDB are trademarks of their respective owners.</copyright><lastBuildDate>Tue, 28 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://percona.community/tags/testing/index.xml" rel="self" type="application/rss+xml"/><item><title>How to test code blocks in documentation</title><link>https://percona.community/blog/2023/02/28/doc-testing/</link><pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate><guid>https://percona.community/blog/2023/02/28/doc-testing/</guid><description>As any developer, I don&amp;rsquo;t like to write documentation. But if I am writing it, I would like to test that what I wrote works. I often found myself copy-pasting something from documentation and trying to run it in the terminal (commands, files, etc.), and it didn&amp;rsquo;t work.
There are usually some environment, typos, or even wrong commands in the doc (that people copy-pasted from the wrong place).
I know that issue, and after writing the documentation, I usually try to clean up everything in my environment and test the doc.</description></item><item><title>Testing Kubernetes with KUTTL</title><link>https://percona.community/blog/2022/12/16/testing-kubernetes-with-kuttl/</link><pubDate>Fri, 16 Dec 2022 00:00:00 +0000</pubDate><guid>https://percona.community/blog/2022/12/16/testing-kubernetes-with-kuttl/</guid><description>Automated testing is the only way to be sure that your code works. Enabling automated testing can be hard and we say a lot of tools to write automated tests in the industry since the beginning. Some veterans in the industry may remember Selenium, Cucumber frameworks that help automate testing in the browser. However, testing in Kubernetes can be hard.
In Percona we deal with Kubernetes and have different operators to automate the management of databases.</description></item><item><title>Percona Live Europe Presents: Test Like a Boss</title><link>https://percona.community/blog/2019/09/25/percona-live-europe-presents-test-like-a-boss/</link><pubDate>Wed, 25 Sep 2019 06:31:58 +0000</pubDate><guid>https://percona.community/blog/2019/09/25/percona-live-europe-presents-test-like-a-boss/</guid><description>My first talk is a tutorial Testing like a boss: Deploy and Test Complex Topologies With a Single Command, scheduled at Percona Live Europe in Amsterdam on September 30th at 13:30.
My second talk is Amazing sandboxes with dbdeployer scheduled on October 1st at 11:00. It is the same topic as the tutorial, but covers a narrow set of features, all in the *amazing* category.
The tutorial introduces a challenging topic, because when people hear testing, they imagine a troop of monkeys fiddling with a keyboard and a mouse, endlessly repeating a boring task.</description></item></channel></rss>