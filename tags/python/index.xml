<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Percona Community</title><link>https://percona.community/tags/python/</link><description>Recent content in Python on Percona Community</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© Percona Community. MySQL, InnoDB, MariaDB and MongoDB are trademarks of their respective owners.</copyright><lastBuildDate>Tue, 22 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://percona.community/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Dolphie, your real-time MySQL monitoring assistant</title><link>https://percona.community/blog/2023/08/22/dolphie-your-real-time-mysql-monitoring-assistant/</link><pubDate>Tue, 22 Aug 2023 00:00:00 +0000</pubDate><guid>https://percona.community/blog/2023/08/22/dolphie-your-real-time-mysql-monitoring-assistant/</guid><description>For as long as I can remember, Innotop has been the go-to terminal tool for real-time MySQL monitoring. It is an invaluable addition to any DBA&amp;rsquo;s toolkit, but unfortunately, it&amp;rsquo;s not really actively maintained these days, except for addressing critical issues, and it hasn&amp;rsquo;t kept pace with the evolving capabilities of modern terminals. With no viable alternatives except for InnotopGo, which is also no longer actively maintained and limited to MySQL 8 (while many still use 5.</description></item><item><title>PostgreSQL: Query Optimization With Python and PgBouncer</title><link>https://percona.community/blog/2023/04/25/postgresql-query-optimization-with-python-and-pgbouncer/</link><pubDate>Tue, 25 Apr 2023 00:00:00 +0000</pubDate><guid>https://percona.community/blog/2023/04/25/postgresql-query-optimization-with-python-and-pgbouncer/</guid><description>Database application by Nick Youngson CC BY-SA 3.0 Pix4free A few months ago I wrote a few blog posts on how to generate test data for your database project using Python, which you can find on the Percona blog and the Community blog:
How To Generate Test Data for MySQL with Python How To Generate Test Data for MongoDB With Python How To Generate Test Data for Your Database Project With Python The basic idea is to create a script that uses Faker, a Python library for generating fake data, and what the script does is</description></item><item><title>How To Generate Test Data for Your Database Project With Python</title><link>https://percona.community/blog/2023/01/09/how-to-generate-test-data-for-your-database-project-with-python/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate><guid>https://percona.community/blog/2023/01/09/how-to-generate-test-data-for-your-database-project-with-python/</guid><description>If you need test data for the database of your project, you can get a dataset from Kaggle or use a data generator. In the first case, if you need to process the data before inserting it into the database, you can use Pandas, a widely used Python library for data analysis. This library supports different formats, including CSV and JSON, and it also provides a method for inserting data into a SQL database.</description></item></channel></rss>